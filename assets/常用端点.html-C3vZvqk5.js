import{_ as s,o as n,c as a,a as t}from"./app-oJgUVX7T.js";const o="/assets/image-20231219144958834-BXkz16qB.png",e="/assets/image-20231219161618501-qrQf7tiQ.png",p="/assets/image-20231219162021948-t7rPhkX5.png",c="/assets/image-20231219163456855-CRSzgDVv.png",r={},i=t(`<h1 id="常用端点" tabindex="-1"><a class="header-anchor" href="#常用端点"><span>常用端点</span></a></h1><ul><li><strong>OAuth2 Authorization Endpoint</strong>：申请授权端点，默认为<code>/oauth2/authorize</code></li><li><strong>OAuth2 Token Endpoint</strong>：获取访问令牌端点，默认为<code>/oauth2/token</code></li><li><strong>OAuth2 Token Introspection Endpoint</strong>：令牌自省端点，默认为<code>/oauth2/introspect</code></li><li><strong>OAuth2 Token Revocation Endpoint</strong>：令牌撤销端点，默认为<code>/oauth2/revoke</code></li><li><strong>OAuth2 Authorization Server Metadata Endpoint</strong>：获取授权服务器元信息的端点，默认为<code>/.well-known/oauth-authorization-server</code></li><li><strong>JWK Set Endpoint</strong>：<code>JWK</code>信息端点，默认为<code>/oauth2/jwks</code></li><li><strong>OpenID Connect 1.0 Provider Configuration Endpoint</strong>：查询提供者配置端点，默认为<code>/.well-known/openid-configuration</code></li><li><strong>OpenID Connect 1.0 UserInfo Endpoint</strong>：用户信息端点，默认为<code>/userinfo</code></li><li><strong>OpenID Connect 1.0 Client Registration Endpoint</strong>：客户端注册端点，默认为<code>/connect/registe</code></li></ul><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h2><p>/oauth2/token：OAuth 2.0 的令牌端点，用于交换授权码或刷新令牌，获取访问令牌或 ID 令牌。</p><p>/oauth2/jwks：JWK 集合端点，用于提供用于 JWT 签名和验证的公钥。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 获取授权服务器 AccessToken 解码公钥</span>
http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">9000</span><span class="token operator">/</span>oauth2<span class="token operator">/</span>jwks
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+o+`" alt="image-20231219144958834"></p><p>/oauth2/userinfo：用户信息端点，用于获取已授权用户的个人资料信息。 /oauth2/keys：JSON Web Key Set 端点，用于提供签名密钥和加密密钥。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">9000</span><span class="token operator">/</span>oauth2<span class="token operator">/</span>keys
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>/oauth2/.well-known/jwks-uri：OpenID Connect 端点，用于公开 JWK 集合的 URL。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">9000</span><span class="token operator">/</span><span class="token punctuation">.</span>well<span class="token operator">-</span>known<span class="token operator">/</span>jwks<span class="token operator">-</span>uri
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;issuer&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://127.0.0.1:9000&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;authorization_endpoint&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://127.0.0.1:9000/oauth2/authorize&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;device_authorization_endpoint&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://127.0.0.1:9000/oauth2/device_authorization&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;token_endpoint&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://127.0.0.1:9000/oauth2/token&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;token_endpoint_auth_methods_supported&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;client_secret_basic&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;client_secret_post&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;client_secret_jwt&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;private_key_jwt&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">&quot;jwks_uri&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://127.0.0.1:9000/oauth2/jwks&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;response_types_supported&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">&quot;grant_types_supported&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;authorization_code&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;client_credentials&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;refresh_token&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;urn:ietf:params:oauth:grant-type:device_code&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">&quot;revocation_endpoint&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://127.0.0.1:9000/oauth2/revoke&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;revocation_endpoint_auth_methods_supported&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;client_secret_basic&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;client_secret_post&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;client_secret_jwt&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;private_key_jwt&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">&quot;introspection_endpoint&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://127.0.0.1:9000/oauth2/introspect&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;introspection_endpoint_auth_methods_supported&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;client_secret_basic&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;client_secret_post&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;client_secret_jwt&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;private_key_jwt&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">&quot;code_challenge_methods_supported&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;S256&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>/oauth2/authorize OAuth 2.0 的授权端点，用于获取授权码或访问令牌。： response_type：必需。表示授权服务器应该返回的授权类型。通常为 code 或 token。 client_id：必需。客户端 ID，授权服务器用于验证客户端。 redirect_uri：可选。授权服务器重定向用户的 URI。 scope：可选。表示客户端请求的授权范围。 state：可选。授权服务器将在重定向 URI 中包含此参数，用于防止 CSRF 攻击。 code_challenge 和 code_challenge_method：可选。用于 PKCE 验证的参数。</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 重定向至登录页面</span>
http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">9000</span><span class="token operator">/</span>oauth2<span class="token operator">/</span>authorize<span class="token operator">?</span>client_id<span class="token operator">=</span>messaging<span class="token operator">-</span>client<span class="token operator">&amp;</span>response_type<span class="token operator">=</span>code<span class="token operator">&amp;</span>scope<span class="token operator">=</span>message<span class="token punctuation">.</span>read<span class="token operator">&amp;</span>redirect_uri<span class="token operator">=</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+e+`" alt="image-20231219161618501"></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token operator">?</span>code<span class="token operator">=</span><span class="token number">4</span>kQNAfKd9615R_7FbqmMUhz4P8oPI76gP9Jngx4HstYqyHbmHpzab8JtXnhE70OWZgBfVUvmfjXcLNRBbi7BIWsV9vNFHMn5V6EkoAJFGCm4MJzByvjjiZQa7_eP_3ww
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>/oauth2/token 根据code换取AccessToken，令牌端点的请求参数： grant_type：必需。表示客户端请求的授权类型，通常为 authorization_code、password、client_credentials 或 refresh_token。 code：必需（仅在授权类型为 authorization_code 时）。授权码。 redirect_uri：必需（仅在授权类型为 authorization_code 时）。与请求授权码时使用的重定向 URI 相同。 client_id 和 client_secret：必需。客户端 ID 和密钥。 username 和 password：必需（仅在授权类型为 password 时）。用户凭据。 refresh_token：必需（仅在授权类型为 refresh_token 时）。刷新令牌。 scope：可选。请求的授权范围。</li></ol><p><img src="`+p+'" alt="image-20231219162021948"></p><p><img src="'+c+'" alt="image-20231219163456855"></p><p>/oauth2/userinfo 用户信息端点的请求参数： access_token：必需。访问令牌。</p><p>/oauth2/keys JSON Web Key Set 端点的请求参数：无。</p><p>/oauth2/.well-known/jwks-uri OpenID Connect 端点的请求参数：无。</p>',22),l=[i];function u(k,d){return n(),a("div",null,l)}const _=s(r,[["render",u],["__file","常用端点.html.vue"]]),h=JSON.parse('{"path":"/spring/springBoot/%E5%B8%B8%E7%94%A8%E7%AB%AF%E7%82%B9.html","title":"常用端点","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"测试","slug":"测试","link":"#测试","children":[]}],"git":{"updatedTime":1704446575000,"contributors":[{"name":"拔土豆的程序员","email":"lizhifuabc@163.com","commits":1}]},"filePathRelative":"spring/springBoot/常用端点.md"}');export{_ as comp,h as data};
