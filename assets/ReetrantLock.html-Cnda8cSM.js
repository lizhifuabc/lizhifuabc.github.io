import{_ as n,o as s,c as a,a as e}from"./app-oJgUVX7T.js";const t={},c=e(`<h1 id="reetrantlock" tabindex="-1"><a class="header-anchor" href="#reetrantlock"><span>ReetrantLock</span></a></h1><p>公平锁指的是完全遵循FIFO原则的一种模式。也就代表着，在时间顺序上来看，公平锁模式下，先执行获取锁逻辑的线程就一定会先持有锁资源。同理，非公平锁则反之。</p><h2 id="nonfairsync非公平锁" tabindex="-1"><a class="header-anchor" href="#nonfairsync非公平锁"><span>NonfairSync非公平锁</span></a></h2><ol><li>AQS同步器对于同步状态标识state的管理是基于其内部FIFO双向链表的同步队列实现的。</li><li>当一条线程获取锁失败时，AQS同步器会将该线程本身及其相关信息封装成Node节点加入同步队列，同时也会阻塞当前线程</li><li>直至同步状态标识state被释放时，AQS才会将同步队列中头节点head内的线程唤醒，让其尝试修改state标识获取锁。</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 构造函数：默认创建的锁属于非公平锁(NonfairSync)类型</span>
<span class="token keyword">public</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sync <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NonfairSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 构造函数：根据传入参数创建锁类型(true公平锁/false非公平锁)</span>
<span class="token keyword">public</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> fair<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sync <span class="token operator">=</span> fair <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">FairSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">NonfairSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 加锁/获取锁操作</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     sync<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 非公平锁类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Sync子类</span><span class="token punctuation">&gt;</span></span>
 */</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">NonfairSync</span> <span class="token keyword">extends</span> <span class="token class-name">Sync</span> <span class="token punctuation">{</span>
    <span class="token comment">// 加锁</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 执行CAS操作，修改同步状态标识获取锁资源</span>
        <span class="token comment">// 因为存在多条线程同时修改的可能，所以需要用CAS操作保证原子性</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment">// 成功则将独占锁线程设置为当前线程  </span>
            <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 否则再次请求同步状态</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fairsync公平锁" tabindex="-1"><a class="header-anchor" href="#fairsync公平锁"><span>FairSync公平锁</span></a></h2><blockquote><p>https://juejin.cn/post/6977746796093112333#heading-4</p></blockquote>`,8),p=[c];function o(l,i){return s(),a("div",null,p)}const r=n(t,[["render",o],["__file","ReetrantLock.html.vue"]]),k=JSON.parse('{"path":"/java/concurrent/ReetrantLock.html","title":"ReetrantLock","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"NonfairSync非公平锁","slug":"nonfairsync非公平锁","link":"#nonfairsync非公平锁","children":[]},{"level":2,"title":"FairSync公平锁","slug":"fairsync公平锁","link":"#fairsync公平锁","children":[]}],"git":{"updatedTime":1694156727000,"contributors":[{"name":"拔土豆的程序员","email":"lizhifuabc@163.com","commits":1}]},"filePathRelative":"java/concurrent/ReetrantLock.md"}');export{r as comp,k as data};
