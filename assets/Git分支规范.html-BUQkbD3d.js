import{_ as e,o as t,c as a,a as l}from"./app-oJgUVX7T.js";const s="/assets/image-20230916105005256-CLc5oPXP.png",n={},i=l('<h1 id="git分支规范" tabindex="-1"><a class="header-anchor" href="#git分支规范"><span>Git分支规范</span></a></h1><ol><li><p>master（main） 分支</p><p>主分支，也是用于部署生产环境的分支，一般由 release 以及 hotfix 分支合并，不能直接修改代码。master 分支的每一次更新，都建议打 tag 添加标签，通常为对应版本号，便于管理。</p></li><li><p>develop（dev） 分支</p><p>主开发分支，包含所有要发布到下一个Release的代码，保持最新完成以及bug修复后的代码，一般开发的新功能时，feature分支都是基于develop分支创建。</p></li><li><p>feature 分支（合并后可以删除）</p><p>开发新功能时，以develop为基础创建feature分支。可以采用 feature_功能名称的命名方式。</p></li><li><p>test 分支</p><p>测试环境分支，外部用户无法访问，专门给测试人员使用，版本相对稳定。</p></li><li><p>release 分支</p><p>预上线分支（预发布分支），UAT测试阶段使用，一般由 test 或 hotfix 分支合并，不建议直接在 release 分支上直接修改代码。</p></li><li><p>hotfix 分支（合并后可以删除）</p><p>紧急问题修复，以master分支为基线，创建hotfix分支，需要合并到 master 分支和 develop 分支。 hotfix_修复 命名规范</p></li></ol><p>总结：</p><table><thead><tr><th style="text-align:left;">分支</th><th style="text-align:left;">功能</th><th style="text-align:left;">环境</th><th style="text-align:left;">可访问</th></tr></thead><tbody><tr><td style="text-align:left;">master</td><td style="text-align:left;">主分支，稳定版本</td><td style="text-align:left;">生产环境</td><td style="text-align:left;">是</td></tr><tr><td style="text-align:left;">develop</td><td style="text-align:left;">开发分支，最新版本</td><td style="text-align:left;">开发者调试</td><td style="text-align:left;">是</td></tr><tr><td style="text-align:left;">feature</td><td style="text-align:left;">开发分支，实现新特性</td><td style="text-align:left;">本地开发</td><td style="text-align:left;">否</td></tr><tr><td style="text-align:left;">test</td><td style="text-align:left;">测试分支，功能测试</td><td style="text-align:left;">测试环境</td><td style="text-align:left;">是</td></tr><tr><td style="text-align:left;">release</td><td style="text-align:left;">预上线分支，发布新版本</td><td style="text-align:left;">用户验收测试环境</td><td style="text-align:left;">是</td></tr><tr><td style="text-align:left;">hotfix</td><td style="text-align:left;">紧急修复分支，修复线上bug</td><td style="text-align:left;">本地开发</td><td style="text-align:left;">否</td></tr></tbody></table><p><img src="'+s+`" alt="image-20230916105005256"></p><h2 id="feature-开发新功能示例" tabindex="-1"><a class="header-anchor" href="#feature-开发新功能示例"><span>feature 开发新功能示例</span></a></h2><p>main 分支：https://gitee.com/lizhifu/demo</p><p>创建 develop 分支</p><p>clone develop 分支：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">-b</span> develop https://gitee.com/lizhifu/demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>开始开发一个新功能时，从develop分支创建一个新的分支：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 切换到新分支: feature_crm</span>
<span class="token function">git</span> checkout <span class="token parameter variable">-b</span> feature_crm develop 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>开发代码并推送 feature-crm 分支：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> push
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>已完成的功能可以合并到develop分支：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 切换 develop 分支</span>
<span class="token function">git</span> checkout develop
<span class="token comment"># no-ff 合并始终创建一个新的提交记录。这样可以避免丢失有关功能分支历史存在的信息，并将一起添加功能的所有提交组合在一起。</span>
<span class="token comment"># 创建更多（空的）提交记录，但是收益远大于成本</span>
<span class="token function">git</span> merge --no-ff feature-crm 
<span class="token comment"># 推送 develop 分支</span>
<span class="token function">git</span> push
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这种方式少了 qa 分支，简化了一下。</p></blockquote><h2 id="release-分支示例" tabindex="-1"><a class="header-anchor" href="#release-分支示例"><span>Release 分支示例</span></a></h2><p>发布分支是从develop分支创建的。</p>`,19),d=[i];function r(p,o){return t(),a("div",null,d)}const f=e(n,[["render",r],["__file","Git分支规范.html.vue"]]),h=JSON.parse('{"path":"/tools/git/Git%E5%88%86%E6%94%AF%E8%A7%84%E8%8C%83.html","title":"Git分支规范","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"feature 开发新功能示例","slug":"feature-开发新功能示例","link":"#feature-开发新功能示例","children":[]},{"level":2,"title":"Release 分支示例","slug":"release-分支示例","link":"#release-分支示例","children":[]}],"git":{"updatedTime":1702371173000,"contributors":[{"name":"拔土豆的程序员","email":"lizhifuabc@163.com","commits":3}]},"filePathRelative":"tools/git/Git分支规范.md"}');export{f as comp,h as data};
