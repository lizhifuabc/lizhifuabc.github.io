import{_ as e,o as s,c as d,a}from"./app-oJgUVX7T.js";const i={},n=a(`<h1 id="redis线程模型" tabindex="-1"><a class="header-anchor" href="#redis线程模型"><span>Redis线程模型</span></a></h1><p>对于读写命令来说，Redis 一直是单线程模型。不过，在 Redis 4.0 版本之后引入了多线程来执行一些大键值对的异步删除操作， Redis 6.0 版本之后引入了多线程来处理网络请求（提高网络 IO 读写性能）。</p><h2 id="单线程模型" tabindex="-1"><a class="header-anchor" href="#单线程模型"><span>单线程模型</span></a></h2><p>Redis 4.0 之后新增了<code>UNLINK</code>（可以看作是 <code>DEL</code> 的异步版本）、<code>FLUSHALL ASYNC</code>（清空所有数据库的所有 key，不仅仅是当前 <code>SELECT</code> 的数据库）、<code>FLUSHDB ASYNC</code>（清空当前 <code>SELECT</code> 数据库中的所有 key）等异步命令。</p><h2 id="redis6-0" tabindex="-1"><a class="header-anchor" href="#redis6-0"><span>Redis6.0</span></a></h2><p><strong>Redis6.0 引入多线程主要是为了提高网络 IO 读写性能</strong>，因为这个算是 Redis 中的一个性能瓶颈（Redis 的瓶颈主要受限于内存和网络）。</p><p>虽然，Redis6.0 引入了多线程，但是 Redis 的多线程只是在网络数据的读写这类耗时操作上使用了，执行命令仍然是单线程顺序执行。因此，你也不需要担心线程安全问题。</p><p>Redis6.0 的多线程默认是禁用的，只使用主线程。如需开启需要设置 IO 线程数 &gt; 1，需要修改 redis 配置文件 <code>redis.conf</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>io-threads <span class="token number">4</span> <span class="token comment">#设置1的话只会开启主线程，官网建议4核的机器建议设置为2或3个线程，8核的建议设置为6个线程</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="速度快" tabindex="-1"><a class="header-anchor" href="#速度快"><span>速度快</span></a></h1><p>官方数据 redis 可以做到每秒近10w的并发，这么快的原因主要总结为以下几点：</p><ul><li><p>完全基于内存操作</p></li><li><p>使用单线程模型来处理客户端的请求，避免了上下文的切换</p><p>redis 6.0之后又使用了多线程，依然使用单线程模型来处理客户端的请求，只是使用多线程来处理数据的读写和协议解析，执行命令还是使用单线程，不会有线程安全的问题。</p><p>之所以加入了多线程因为 redis 的性能瓶颈在于网络IO而非CPU，使用多线程能提升IO读写的效率，从而整体提高redis的性能。</p></li><li><p>IO 多路复用机制</p></li><li><p>自身使用 C 语言编写，有很多优化机制，比如动态字符串 sds</p></li></ul>`,12),t=[n];function c(l,r){return s(),d("div",null,t)}const p=e(i,[["render",c],["__file","Redis线程模型.html.vue"]]),h=JSON.parse('{"path":"/database/nosql/Redis%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B.html","title":"Redis线程模型","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"单线程模型","slug":"单线程模型","link":"#单线程模型","children":[]},{"level":2,"title":"Redis6.0","slug":"redis6-0","link":"#redis6-0","children":[]}],"git":{"updatedTime":1694337389000,"contributors":[{"name":"拔土豆的程序员","email":"lizhifuabc@163.com","commits":1}]},"filePathRelative":"database/nosql/Redis线程模型.md"}');export{p as comp,h as data};
