import{_ as a,o as s,c as e,a as l}from"./app-oJgUVX7T.js";const n={},t=l(`<h1 id="mysql-limit优化" tabindex="-1"><a class="header-anchor" href="#mysql-limit优化"><span>MySQL limit优化</span></a></h1><p>Limit 是一种常用的分页查询语句，它可以指定返回记录行的偏移量和最大数目。例如，下面的语句表示从 demo表中查询 val 等于4的记录，并返回第300001到第300005条记录：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> demo <span class="token keyword">where</span> val<span class="token operator">=</span><span class="token number">4</span> <span class="token keyword">limit</span> <span class="token number">300000</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="mysql-的索引结构" tabindex="-1"><a class="header-anchor" href="#mysql-的索引结构"><span>MySQL 的索引结构</span></a></h2><p>MySQL 支持多种类型的索引，其中最常用的是 B+ 树索引。B+ 树索引是一种平衡多路查找树，它有以下特点：</p><ul><li>树中的每个节点最多包含 m 个子节点，m 被称为 B+ 树的阶。</li><li>树中的每个节点最少包含 m/2（向上取整）个子节点，除了根节点和叶子节点。</li><li>树中的所有叶子节点都位于同一层，并且通过指针相连。</li><li>树中的所有非叶子节点只存储键值（索引列）和指向子节点的指针。</li><li>树中的所有叶子节点存储键值（索引列）和指向数据记录（聚簇索引）或者数据记录地址（非聚簇索引）的指针。</li></ul><blockquote><p>https://juejin.cn/post/7278951711553486911</p></blockquote>`,7),i=[t];function o(c,p){return s(),e("div",null,i)}const r=a(n,[["render",o],["__file","MySQL-limit优化.html.vue"]]),d=JSON.parse('{"path":"/database/mysql/MySQL-limit%E4%BC%98%E5%8C%96.html","title":"MySQL limit优化","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"MySQL 的索引结构","slug":"mysql-的索引结构","link":"#mysql-的索引结构","children":[]}],"git":{"updatedTime":1697008847000,"contributors":[{"name":"拔土豆的程序员","email":"lizhifuabc@163.com","commits":1}]},"filePathRelative":"database/mysql/MySQL-limit优化.md"}');export{r as comp,d as data};
