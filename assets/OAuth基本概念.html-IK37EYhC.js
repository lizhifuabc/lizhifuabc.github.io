import{_ as e,o as t,c as l,a as i}from"./app-oJgUVX7T.js";const o="/assets/sa-oauth2-setup-DMLd7HE6.png",a={},s=i('<h1 id="oauth-2-0-基本概念" tabindex="-1"><a class="header-anchor" href="#oauth-2-0-基本概念"><span>OAuth 2.0 基本概念</span></a></h1><p>OAuth（开放授权）是一个开放标准，允许用户让第三方应用访问该用户在某一网站上存储的私密的资源（如照片，视频，联系人列表），而无需将用户名和密码提供给第三方。</p><h2 id="oauth2-授权流程中的角色" tabindex="-1"><a class="header-anchor" href="#oauth2-授权流程中的角色"><span>OAuth2 授权流程中的角色</span></a></h2><ul><li>资源拥有者（<code>resource owner</code>） <ul><li>最终用户：能授权访问受保护资源的一个实体，可以是一个人。</li></ul></li><li>资源服务器（<code>resource server</code>） <ul><li>存储受保护资源，客户端通过<code>access token</code>请求资源，资源服务器响应受保护资源给客户端；</li></ul></li><li>授权服务器（<code>authorization server</code>） <ul><li>成功验证资源拥有者并获取授权之后，授权服务器颁发授权令牌（<code>Access Token</code>）给客户端。</li></ul></li><li>客户端（<code>client</code>） <ul><li>第三方应用，也可以是它自己的官方应用；其本身不存储资源，而是资源拥有者授权通过后，使用它的授权（授权令牌）访问受保护资源，然后客户端把相应的数据展示出来/提交到服务器。</li></ul></li></ul><h2 id="四种模式" tabindex="-1"><a class="header-anchor" href="#四种模式"><span>四种模式</span></a></h2><ol><li>授权码（Authorization Code）：OAuth2.0标准授权步骤，Server端向Client端下放Code码，Client端再用Code码换取授权Token</li><li>隐藏式（Implicit）：无法使用授权码模式时的备用选择，Server端使用URL重定向方式直接将Token下放到Client端页面</li><li>密码式（Password）：Client直接拿着用户的账号密码换取授权Token</li><li>客户端凭证（Client Credentials）：Server端针对Client级别的Token，代表应用自身的资源授权</li></ol><p><img src="'+o+'" alt="https://oss.dev33.cn/sa-token/doc/oauth2/sa-oauth2-setup.png"></p>',7),n=[s];function c(h,r){return t(),l("div",null,n)}const d=e(a,[["render",c],["__file","OAuth基本概念.html.vue"]]),p=JSON.parse('{"path":"/design/OAuth/OAuth%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html","title":"OAuth 2.0 基本概念","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"OAuth2 授权流程中的角色","slug":"oauth2-授权流程中的角色","link":"#oauth2-授权流程中的角色","children":[]},{"level":2,"title":"四种模式","slug":"四种模式","link":"#四种模式","children":[]}],"git":{"updatedTime":1704446575000,"contributors":[{"name":"拔土豆的程序员","email":"lizhifuabc@163.com","commits":1}]},"filePathRelative":"design/OAuth/OAuth基本概念.md"}');export{d as comp,p as data};
