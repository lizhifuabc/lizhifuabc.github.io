import{_ as e,o as t,c as a,a as i}from"./app-oJgUVX7T.js";const o={},p=i('<h1 id="微服务和中台" tabindex="-1"><a class="header-anchor" href="#微服务和中台"><span>微服务和中台</span></a></h1><ul><li><p>微服务架构的核心理念是将一个应用拆分成小而自治的服务。</p></li><li><p>中台则在企业内部构建共享的技术平台，以提高效率和协同。</p></li></ul><p>虽然微服务具有灵活性和独立性的优点，但同时也增加了系统复杂性、调试、管理、交付成本。这些挑战需要通过引入微服务治理来解决，治理本身带来一定的成本。</p><p>中台的构建需要企业进行组织和文化上的变革，这不是一蹴而就的过程。</p><p>新的理念虽然能够解决当前问题，但并非银弹，根据历史经验，新的理念和技术总会带来新的挑战，比如微服务治理。微服务治理不仅仅包括服务注册、发现、配置中心，还包括DevOps、CI、CD等方面。</p><p>在面对一些新的理念货概念（包括微服务、中台），研发人员往往会陷入0/1游戏，对、错的思考模式。然而，更合理的方式是首先了解当前项目或产品所面临的困境和场景，考虑技术引入可能带来的成本和价值，而不是盲目跟从他人观点。</p><p>成功的商业公司如Netflix、亚马逊等证明了微服务的有效性，但商业战略上的失败通常涉及多个因素。将责任归咎于微服务或中台显然是一种失偏颇的观点。</p><p>这就像产品不成功，把失败的原因归咎于研发人员不给力一样滑稽。</p><blockquote><p>摘自：Ahoo-Wang</p></blockquote>',9),s=[p];function c(l,n){return t(),a("div",null,s)}const r=e(o,[["render",c],["__file","微服务中台等等设计.html.vue"]]),d=JSON.parse('{"path":"/design/distributed/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E5%8F%B0%E7%AD%89%E7%AD%89%E8%AE%BE%E8%AE%A1.html","title":"微服务和中台","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1704446575000,"contributors":[{"name":"拔土豆的程序员","email":"lizhifuabc@163.com","commits":1}]},"filePathRelative":"design/distributed/微服务中台等等设计.md"}');export{r as comp,d as data};
