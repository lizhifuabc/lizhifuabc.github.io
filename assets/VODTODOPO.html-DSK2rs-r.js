import{_ as t,o,c as O,b as e}from"./app-oJgUVX7T.js";const a={},s=e("h1",{id:"vo、dto、do、po",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vo、dto、do、po"},[e("span",null,"VO、DTO、DO、PO")])],-1),c=e("p",null,"VO（View Object）： 视图对象，用于展示层，它的作用是把某个指定页面（或组件）的所有数据封装起来。 DTO（Data Transfer Object）： 数据传输对象，这个概念来源于J2EE的设计模式，原来的目的是为了EJB的分布式应用提供粗粒度的数据实体，以减少分布式调用的次数，从而提高分布式调用的性能和降低网络负载，但在这里，我泛指用于展示层与服务层之间的数据传输对象。 DO（Domain Object）： 领域对象，就是从现实世界中抽象出来的有形或无形的业务实体。 PO（Persistent Object）： 持久化对象，它跟持久层（通常是关系型数据库）的数据结构形成一一对应的映射关系，如果持久层是关系型数据库，那么，数据表中的每个字段（或若干个）就对应PO的一个（或若干个）属性。",-1),n=[s,c];function i(d,r){return o(),O("div",null,n)}const _=t(a,[["render",i],["__file","VODTODOPO.html.vue"]]),m=JSON.parse('{"path":"/design/codedesign/VODTODOPO.html","title":"VO、DTO、DO、PO","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1694273721000,"contributors":[{"name":"拔土豆的程序员","email":"lizhifuabc@163.com","commits":2}]},"filePathRelative":"design/codedesign/VODTODOPO.md"}');export{_ as comp,m as data};
