import{_ as e,o as a,c as t,a as i}from"./app-oJgUVX7T.js";const l={},s=i('<h1 id="mysql主键" tabindex="-1"><a class="header-anchor" href="#mysql主键"><span>MySQL主键</span></a></h1><p>主键可以唯一标识表中的某一行（记录），合理地设置主键，可以帮助我们准确、快速找到所需要的数据记录。表定义了主键，就相当于给表加了一个<strong>主键索引</strong>。索引可以帮助提高数据查询的效率，就像书的目录一样。</p><blockquote><p><strong>阿里巴巴 Java 开发手册</strong>：</p><p>【强制】 表名、字段名必须使用小写字母或数字，禁止出现数字开头，禁止两个下划线中间只出现数字。 【强制】 主键索引名为pk_字段名；唯一索引名为uk_字段名；普通索引名则为idx_字段名。 【强制】 小数类型为 decimal，禁止使用 float 和 double。 【强制】 表必备三字段：id，create_time，update_time。其中 id 必为主键，类型为 bigint unsigned、单表自增、步长为 1。</p></blockquote><h2 id="业务字段做主键" tabindex="-1"><a class="header-anchor" href="#业务字段做主键"><span>业务字段做主键</span></a></h2><p>尽量不要用业务字段做主键，因为无法预测项目在整个生命周期中，哪个业务字段会因为业务需求而有重复，或者重用之类的情况，此时需要变更主键，这往往是不能被接受的。</p><p>如果有唯一性的要求，可以使用唯一性索引。</p><h2 id="分布式系统全局唯一-id" tabindex="-1"><a class="header-anchor" href="#分布式系统全局唯一-id"><span>分布式系统全局唯一 ID</span></a></h2><ul><li>数据库自增生成分布式 ID</li><li>雪花</li><li>Redis</li><li>..........</li></ul>',8),n=[s];function d(o,c){return a(),t("div",null,n)}const h=e(l,[["render",d],["__file","MySQL主键.html.vue"]]),p=JSON.parse('{"path":"/database/mysql/MySQL%E4%B8%BB%E9%94%AE.html","title":"MySQL主键","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"业务字段做主键","slug":"业务字段做主键","link":"#业务字段做主键","children":[]},{"level":2,"title":"分布式系统全局唯一 ID","slug":"分布式系统全局唯一-id","link":"#分布式系统全局唯一-id","children":[]}],"git":{"updatedTime":1694763025000,"contributors":[{"name":"拔土豆的程序员","email":"lizhifuabc@163.com","commits":1}]},"filePathRelative":"database/mysql/MySQL主键.md"}');export{h as comp,p as data};
