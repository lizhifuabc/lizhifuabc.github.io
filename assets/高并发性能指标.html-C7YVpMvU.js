import{_ as e,o as t,c as i,a as s}from"./app-oJgUVX7T.js";const r={},a=s('<h1 id="高并发性能指标" tabindex="-1"><a class="header-anchor" href="#高并发性能指标"><span>高并发性能指标</span></a></h1><ul><li><p>QPS（Query Per Second）是指单位时间内查询或访问服务器的次数。 Queries Per Second意思是“每秒查询率”，是一台服务器每秒能够相应的查询次数，是对一个特定的查询服务器在规定时间内所处理流量多少的衡量标准。</p></li><li><p>TPS（Transaction Per Second）是指单位时间（每秒）系统处理的事务数。</p><p>TransactionsPerSecond的缩写，也就是事务数/秒。它是软件测试结果的测量单位。事务量可以是单个接口（一个操作），也可以是多个接口（多个操作），例如点击新增按钮是单个接口，单个事务，点击新增，输入信息，点击提交这一整个流程是多个接口，多个事务。</p></li><li><p>RT 响应时间</p><p>响应时间：执行一个请求从开始到最后收到响应数据所花费的总体时间,即从客户端发起请求到收到服务器响应结果的时间。 响应时间RT(Response-time)，是一个系统最重要的指标之一，它的数值大小直接反应了系统的快慢。</p></li><li><p>并发数</p><p>客户端并发，也就是jmeter线程数；跑道里参加赛跑的人数（这里的并发是广义的并发，即同一个时间段内对系统发起的请求数量）。并发数是指系统同时能处理的请求数量，这个也是反应了系统的负载能力。</p></li><li><p>吞吐量</p><p>吞吐量是指系统处理客户请求数量的总和（为了好记可以理解为总的并发数）。 系统的吞吐量（承压能力）与request对CPU的消耗、外部接口、IO等等紧密关联。单个request 对CPU消耗越高，外部系统接口、IO速度越慢，系统吞吐能力越低，承载压力的能力越差。 吞吐率是单位时间内的吞吐量。可以从多个维度衡量吞吐率：①业务角度：单位时间（每秒）的请求数或页面数，即请求数/秒或页面数/秒；②网络角度：单位时间（每秒）网络中传输的数据包大小，即字节数/秒等；③系统角度，单位时间内服务器所承受的压力，即系统的负载能力。</p></li></ul><p>与吞吐量有关的参数：QPS（TPS）、并发数、响应时间。 QPS（TPS）：（Query Per Second）每秒钟request/事务 数量 并发数： 系统同时处理的request/事务数 响应时间： 一般取平均响应时间 QPS（TPS）= 总并发数/响应时间 （单位s） 总并发数 = QPS*响应时间（单位s）</p>',3),n=[a];function c(o,p){return t(),i("div",null,n)}const d=e(r,[["render",c],["__file","高并发性能指标.html.vue"]]),_=JSON.parse('{"path":"/design/distributed/%E9%AB%98%E5%B9%B6%E5%8F%91%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87.html","title":"高并发性能指标","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1694847225000,"contributors":[{"name":"拔土豆的程序员","email":"lizhifuabc@163.com","commits":1}]},"filePathRelative":"design/distributed/高并发性能指标.md"}');export{d as comp,_ as data};
